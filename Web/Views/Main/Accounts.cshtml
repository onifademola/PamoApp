
@{
    ViewBag.Title = "Accounts";
}

<script type="text/javascript">
    $(document).ready(
        function () {
            $("#txt1").html("Accounts");
            $("#txt2").html("(Do Patients Billing)");
            //$("#txtWarning").html("System failure imminent, carefully change COMPUTE TYPE & CLASS HIERARCHY under strict change request, and only when agreed and advised by the SCHOOL ADMINISTRATORS!");
        });
</script>


<div id="pageDP">
    <div class="col-md-4" id="pageGridPatient">

        @(Html.Kendo().Grid<Repo.Models.vwFlowQueueAttendance>()
                .Name("GridAcct")
                .NoRecords("No patient queued for billing found")
                .Columns(columns =>
                {
                    columns.Bound(c => c.AttCArdNumber).Title("");
                    columns.Bound(c => c.FirstName).Title("");
                    columns.ForeignKey(p => p.FQCurrentSTatus, (System.Collections.IEnumerable)ViewData["vstatus"], "Key", "Value")
                    .Title("");
                    columns.Bound(c => c.FQTimeStamp).Format("{0:dd/MM/yyyy hh:mm: tt}").Title("");
                    columns.Bound(c => c.FQLastUpdatedBy).Title("");
                })
                .ToolBar(toolbar =>
                {
                toolbar.Template(@<text>
            <div class="row">
                <div class="col-sm-4 col-md-6 toolbar">
                    @(Html.Kendo().Button()
                        .Name("iconButton")
                        .Tag("a")
                        .Icon("refresh")
                        .Content("End Patient's Visit")
                        .Events(e => e.Click("csonClick"))
                        //.Content("<span class='fa-share' title='Click to run process'>Send to Consulting</span>")

                    )
                </div>
            </div>
                </text>);
                })
                .Resizable(r => r.Columns(true))
                .Scrollable(sc => sc.Endless(true))
                .Sortable()
                .Selectable(selectable => selectable
                .Mode(GridSelectionMode.Single))
                .Mobile(MobileMode.Auto)
                .Pageable(p => p.Numeric(false)
                    .PreviousNext(false)
                    .Refresh(true)
                )
                .Events(ev => ev.Change("onChange"))
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(false)
                .ServerOperation(false)
                .PageSize(50)
                .Events(e =>
                {
                    e.Error("error_handler");
                })
                .Model(model =>
                {
                    model.Id(p => p.FQID);
                })
                .Read(read => read.Action("Read_GetAccountsFlowQueues", "ProcessFlow"))
                )
        )
    </div>
    <div class="col-md-8" id="scoreList">
        
    </div>

</div>

<div class="container">
    @Html.Partial("~/Views/Shared/_PartialProgressBar.cshtml")
</div>

<script src="~/Scripts/custom/progressBar.js"></script>
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
            }

    function csonClick() {
        if (confirm('NOTE: This process cannot be reversed ! \n \n Please, confirm that Patient has settled all payment \n \n Is it Ok to end Patients visit?'))
            sendToAccounts();
        else
            CustomErrorNotify("End Patients visit aborted.", "Abort !");      
    };
    
    
    function sendToAccounts() {
        //console.log(consulRmID);
        var grid = $("#GridAcct").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        //console.log(selectedItem);
        if (selectedItem == null) {
            return CustomErrorNotify("Sorry! You have not selected a Patient", "Error !");
        }
        var data = {
            "attdID": selectedItem.AttdID
        };

        beginProgress();

        $.post("/Main/SendToAccounts", data)
            .done(function (result) {
                endProgress();

                if (result[0].resp == "ok") {
                    CustomSuccessNotify(result[0].mesag, "Success !");

                    var agrid = $("#GridAcct").data("kendoGrid");
                    agrid.dataSource.read();
                    //clear bio data grid
                    //var abgrid = $("#GridBV").data("kendoGrid");
                    //abgrid.dataSource.data([]);
                    
                }
                else {
                    CustomErrorNotify(result[0].mesag, "Error !");
                }
            }
            ).error(function (xhr, ajaxOptions, thrownError) {
                endProgress();
                ServiceError();
            }
            );
    };

    $(function () {
        // Declare a proxy to reference the hub.
        var notifications = $.connection.flowQueueHub;

        // Create a function that the hub can call to broadcast messages.
        notifications.client.updateAccMsgs = function () {

            var clsRegGrid = $("#GridAcct").data("kendoGrid");
            clsRegGrid.dataSource.read();

            CustomQueueNotify("New Patient arrives Accounts", "Out Patient Alert !");
        };
        // Start the connection.
        $.connection.hub.start().done(function () {
            //alert("connection started")
        }).fail(function (e) {
            //alert(e);
        });
    });
    
    function onChange(arg) {
        //kendoConsole.log("The selected product ids are: [" + this.selectedKeyNames().join(", ") + "]");
        var grid = $("#GridBV").data("kendoGrid");
        grid.dataSource.read();
        $("#scoreList").show();
        $("#scoreTop").show();
    }
    
    function onFilterChange() {
        $("#scoreList").hide();
        $("#scoreTop").hide();
    }
</script>

