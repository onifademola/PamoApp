
@{
    ViewBag.Title = "Lab";
}

<script type="text/javascript">
    $(document).ready(
        function () {
            $("#txt1").html("Admission");
            $("#txt2").html("(Attend to Patients on Admission)");
            //$("#txtWarning").html("System failure imminent, carefully change COMPUTE TYPE & CLASS HIERARCHY under strict change request, and only when agreed and advised by the SCHOOL ADMINISTRATORS!");
        });
</script>


<div id="pageDP">
    <div class="col-md-4" id="pageGridPatient">
        <div class="panel panel-color panel-blue">
            <div class="panel-heading" style="background-color:#1C3857;">
                <i class="fa-5x fa fa-hand-o-right pull-left"></i>
                <h5 class="panel-title" style="font-size:14px">Admit A Patient</h5>
                <div class="panel-options">
                    <a href="#" data-toggle="panel">
                        <span class="collapse-icon">&ndash;</span>
                        <span class="expand-icon">+</span>
                    </a>
                    <a href="#" data-toggle="reload" id="filterReload">
                        <i class="fa-rotate-right"></i>
                    </a>
                </div>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-sm-4 col-md-6 toolbar">
                        @(Html.Kendo().DropDownList()
                                  .Name("admDrpdwn")
                                  //.HtmlAttributes(new { style = "width:100%;" })
                                  .OptionLabel("Select a Room...")
                                  .DataTextField("Text")
                                  .DataValueField("Value")
                                  .DataSource(source =>
                                  {
                                      source.Read(read =>
                                      {
                                          read.Action("GetClinicWardsForGrid", "Main");
                                      });
                                  })
                    )
                </div>
                    
                    <div>
                        @(Html.Kendo().Button()
                        .Name("iconButton")
                        .Tag("a")
                        .Icon("refresh")
                        .Content("Admit Patient")
                        .Events(e => e.Click("admClick"))
                        )
                    </div>
                </div>
                <br />
                <span class="uk-form-controls" style="width:100%">
                    <textarea id="txtbox" name="txtboxx" type="text" width="100%" placeholder="add comments here"></textarea>
                </span>
            </div>
        </div>

        @(Html.Kendo().Grid<Repo.Models.vwFlowQueueAttendance>()
                .Name("GridAdmsn")
                .NoRecords("No patient placed on admission found")
                .Columns(columns =>
                {
                    columns.Bound(c => c.AttCArdNumber).Title("");
                    columns.Bound(c => c.FirstName).Title("");
                    columns.ForeignKey(p => p.FQCurrentSTatus, (System.Collections.IEnumerable)ViewData["vstatus"], "Key", "Value")
                    .Title("");
                    columns.Bound(c => c.FQTimeStamp).Format("{0:dd/MM/yyyy hh:mm: tt}").Title("");
                    columns.Bound(c => c.FQLastUpdatedBy).Title("");
                })
                .ToolBar(toolbar =>
                {
                toolbar.Template(@<text>
            <div class="row">
                
                <div class="col-sm-4 col-md-6 toolbar">
                   
                    <div>
                        @(Html.Kendo().Button()
                        .Name("iconBtnP")
                        .Tag("a")
                        .Icon("refresh")
                        .Content("Discharge & Send to Pharmacy")
                        .Events(e => e.Click("csonClick"))
                    )
                </div>
                </div>
            </div>
                </text>);
                })
                .Resizable(r => r.Columns(true))
                .Scrollable(sc => sc.Endless(true))
                .Sortable()
                .Selectable(selectable => selectable
                .Mode(GridSelectionMode.Single))
                .Mobile(MobileMode.Auto)
                .Pageable(p => p.Numeric(false)
                    .PreviousNext(false)
                    .Refresh(true)
                )
                .Events(ev => ev.Change("onChange"))
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(false)
                .ServerOperation(false)
                .PageSize(50)
                .Events(e =>
                {
                    e.Error("error_handler");
                })
                .Model(model =>
                {
                    model.Id(p => p.FQID);
                })
                .Read(read => read.Action("Read_GetAdmissionFlowQueues", "ProcessFlow"))
                )
        )
    </div>

    <div class="col-md-8" id="admissionList">
        @*@Html.Partial("_PartialPageSelection")*@
        @(Html.Kendo().Grid<Repo.DTOs.dto_Admission>()
                .Name("GridADM")
                .NoRecords("Selected Patient not yet admitted")
                .Columns(columns =>
                {
                    columns.ForeignKey(c => c.ClinicWardID, (System.Collections.IEnumerable)ViewData["wrdstatus"], "Value", "Text")
                    .Title("Ward");
                    columns.ForeignKey(c => c.StatusID, (System.Collections.IEnumerable)ViewData["admstatus"], "Key", "Value")
                    .Title("Admission Status");
                    columns.Bound(c => c.C_Date).Format("{0:dd/MM/yyyy hh:mm: tt}").Title("Date Admitted");
                    columns.Bound(c => c.Remark);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Create();
                    toolbar.Save();
                    toolbar.Excel();
                })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .AutoBind(false)
                .Resizable(r => r.Columns(true))
                .Scrollable(sc => sc.Endless(true))
                .Sortable()
                .Selectable(selectable => selectable
                .Mode(GridSelectionMode.Single))
                .Mobile(MobileMode.Auto)
                .Pageable(p => p.Numeric(false)
                    .PreviousNext(false)
                    .Refresh(true)
                )
                .ClientDetailTemplateId("template")
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(false)
                .ServerOperation(false)
                .PageSize(50)
                .Events(e =>
                {
                    e.Error("error_handler");
                })
                .Model(model =>
                {
                    model.Id(p => p.ID);
                    model.Field(p => p.C_Date).Editable(false);
                })
                    .Read(read => read.Action("Admission_Read", "Consultation").Data("filterData"))
                    .Update(update => update.Action("Admission_BatchUpdate", "Consultation"))
                    .Create(c => c.Action("Admission_Create", "Consultation").Data("filterData"))
                    .Destroy(d => d.Action("Admission_Read", "Consultation"))
                )
        )
        <script>
            function filterData() {
                var grid = $("#GridAdmsn").data("kendoGrid");
                var selectedItem = grid.dataItem(grid.select());
                if (selectedItem != null) {
                    return {
                        attId: selectedItem.AttdID
                    };
                } else {
                    return {
                        attId: 0
                    };
                }
            };
        </script>
    </div>
</div>

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<Repo.DTOs.dto_WardRound>()
                      .Name("grid_#=AttID#")
                        .Columns(columns =>
                        {
                            columns.Bound(o => o.Date).Format("{0:dd/MM/yyyy}").EditorTemplateName("Date").Width(120);
                            columns.Bound(o => o.Hour);
                            columns.Bound(o => o.Note);
                            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(170);
                        })
                        .ToolBar(toolbar => toolbar.Create())
                        .Editable(editable => editable.Mode(GridEditMode.InLine))
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            //.AutoSync(true)
                            .PageSize(5)
                            .ServerOperation(false)
                                    .Model(model =>
                                    {
                                        model.Id(p => p.ID);
                                        model.Field(f => f.Date).Editable(false);
                                        model.Field(f => f.Hour).Editable(false);

                                    })
                            //.Events(events =>
                            //{
                            //    events.Error("ServiceError");
                            //    events.Sync("sync_handler");
                            //})
                            .Create(update => update.Action("WardRound_Create", "Consultation", new { admID = "#=AttID#" }))
                            .Read(read => read.Action("WardRound_Read", "Consultation", new { admID = "#=AttID#" }))
                            .Update(update => update.Action("WardRound_BatchUpdate", "Consultation"))
                            .Destroy(update => update.Action("WardRound_Destroy", "Consultation"))
                        )
                        .Sortable()
                        .ToClientTemplate())
</script>

@Html.Partial("~/Views/Shared/_PartialProgressBar.cshtml")

<script src="~/Scripts/appjs/admission.js"></script>
<script src="~/Scripts/custom/progressBar.js"></script>

