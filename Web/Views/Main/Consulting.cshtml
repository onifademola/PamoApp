
@{
    ViewBag.Title = "Consulting";
}
<script src="~/Scripts/appjs/consulting.js"></script>
<script type="text/javascript">
    $(document).ready(
        function () {
            $("#txt1").html("Consulting ");
            $("#txt2").html("(Diagnose & recommed treatment for incoming Out Patients)");               
        }
    );
</script>

<div id="pageDP">
    <div class="col-md-4" id="pageTopLeft">

        @(Html.Kendo().Grid<Repo.Models.vwFlowQueueAttendance>()
            .ToolBar(tb => tb.Template(@<text>
            <div class="toolbar">
                @(Html.Kendo().DropDownList()
                                  .Name("consrDrpdwn")
                                  .HtmlAttributes(new { style = "width:100%;" })
                                  .OptionLabel("Choose your Room...")
                                  .DataTextField("Text")
                                  .DataValueField("Value")
                                  .Events(e => {
                                      //e.Change("drpdwnChange");
                                      e.Open("drpdwnOpen");
                                      e.Close("drpdwnChange");
                                      //e.Close("drpdwnClose");
                                  })
                                  .DataSource(source =>
                                  {
                                      source.Read(read =>
                                      {
                                          read.Action("GetConsultingRoomsForGrid", "Main");
                                      });
                                  })

                )                
            </div>
            <br />
            <div class="toolbar">
                @(Html.Kendo().Button()
                        .Name("btnPharm")
                        .Tag("a")
                        .Icon("refresh")
                        .Content("To Pharmacy")
                        .Events(e => e.Click("btnPharmClick"))
                )
                @(Html.Kendo().Button()
                        .Name("btnLab")
                        .Tag("a")
                        .Icon("refresh")
                        .Content("To LAB")
                        .Events(e => e.Click("btnLabClick"))
                )
                @(Html.Kendo().Button()
                        .Name("btnAdmitp")
                        .Tag("a")
                        .Icon("refresh")
                        .Content("Admit Patient")
                        .Events(e => e.Click("btnAdmitpClick"))
                )
            </div>
            </text>))
            .Name("consPtsGrid")
            .NoRecords("No patient match is found, or you have not specified a Consulting Room")
            .Columns(columns =>
            {
                columns.Bound(c => c.AttCArdNumber).Title("Card").Width(20);
                columns.Bound(c => c.FirstName).Title("Name").Width(40);
                columns.ForeignKey(p => p.FQCurrentSTatus, (System.Collections.IEnumerable)ViewData["vstatus"], "Key", "Value")
                .Title("").Width(150);
                columns.ForeignKey(p => p.AttConsultingRoom, (System.Collections.IEnumerable)ViewData["conRoom"], "Value", "Text")
                .Title("").Width(150);
                columns.Bound(c => c.FQTimeStamp).Format("{0:dd/MM/yyyy hh:mm: tt}").Title("Date/Time").Width(80);
                columns.Bound(c => c.FQLastUpdatedBy).Title("Action By").Width(20);
            }).AutoBind(false)
            .Filterable(f => f.Mode(GridFilterMode.Row))
            .Scrollable(sc => sc.Endless(true))
            .Sortable()
            .Selectable(selectable => selectable
            .Mode(GridSelectionMode.Single))
            .Mobile(MobileMode.Auto)
            .Pageable(p => p.Numeric(false).PreviousNext(false).Refresh(true))
            .Events(ev => ev.Change("onChange"))
            .DataSource(dataSource => dataSource
                .Ajax()
                .AutoSync(false)
                .Batch(false)
                .ServerOperation(false)
                .PageSize(50)
                .Events(e =>
                {
                    e.Error("error_handler");
                })
                .Model(model =>
                {
                    model.Id(p => p.FQID);
                })
                .Read(read => read.Action("Read_GetConsultingFlowQueuesByRoomID", "ProcessFlow").Data("filterConData"))
            )
        )
        <script>
            function filterConData() {
                var consultnnRmID = $("#consrDrpdwn").data("kendoDropDownList").value();
                if (consultnnRmID > 0) {
                    return { conRoomID: consultnnRmID };
                } else {
                    return CustomDocConsWarningNotify("Sorry! We could not retrieve data. You have not specified your Consulting Room", "Error !");
                }
            };
        </script>
    </div>

    <div class="col-sm-8 col-md-8" id="pageBottomRight">
        <div>

            <ul class="nav nav-tabs nav-tabs-justified">
                <li class="active">
                    <a href="#home-3" data-toggle="tab">
                        <span class="visible-xs"><i class="fa-home"></i></span>
                        <span class="hidden-xs">Report</span>
                    </a>
                </li>
                <li>
                    <a href="#profile-3" data-toggle="tab">
                        <span class="visible-xs"><i class="fa-user"></i></span>
                        <span class="hidden-xs">Bio Vital</span>
                    </a>
                </li>
                <li>
                    <a href="#messages-3" data-toggle="tab">
                        <span class="visible-xs"><i class="fa-envelope-o"></i></span>
                        <span class="hidden-xs">Prescriptions</span>
                    </a>
                </li>
                <li>
                    <a href="#settings-3" data-toggle="tab">
                        <span class="visible-xs"><i class="fa-cog"></i></span>
                        <span class="hidden-xs">Lab Requests</span>
                    </a>
                </li>                
            </ul>

            <div class="tab-content">
                <div class="tab-pane active" id="home-3">
                    <textarea class="tinymce" id="texteditor"></textarea>
                </div>
                <div class="tab-pane" id="profile-3">
                    <div id="biov">
                        @(Html.Kendo().Grid<Repo.DTOs.dto_BioVital>()
                .Name("GridBV")
                .NoRecords("No patient's biovital found")
                .Columns(columns =>
                {
                    //columns.Bound(c => c.CardNumber);
                    columns.Bound(c => c.C_Date).Format("{0:dd/MM/yyyy hh:mm: tt}").Title("Date");
                    columns.Bound(c => c.BP);
                    columns.Bound(c => c.Height);
                    columns.Bound(c => c.Weight);
                    columns.Bound(c => c.Mass);
                    columns.Bound(c => c.Pulse);
                    columns.Bound(c => c.Temp);
                    columns.Bound(c => c.Fasting);
                    columns.Bound(c => c.RBS);
                    //columns.ForeignKey(c => c.RecordedById, (System.Collections.IEnumerable)ViewData["recBy"], "Value", "Text")
                    //.Title("Recorded By");
                    columns.Command(command => { command.Edit().Text("View"); command.Destroy(); }).Width(250);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Create();
                    toolbar.Excel();
                })
                .Editable(editable => editable.Mode(GridEditMode.PopUp))
                .AutoBind(false)
                .Resizable(r => r.Columns(true))
                .Scrollable(sc => sc.Endless(true))
                .Sortable()
                .Selectable(selectable => selectable
                .Mode(GridSelectionMode.Single))
                .Mobile(MobileMode.Auto)
                .Pageable(p => p.Numeric(false)
                    .PreviousNext(false)
                    .Refresh(true)
                )
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(false)
                .ServerOperation(false)
                .PageSize(50)
                .Events(e =>
                {
                    e.Error("error_handler");
                })
                .Model(model =>
                {
                    model.Id(p => p.ID);
                    model.Field(p => p.C_Date).Editable(false);
                    model.Field(p => p.RecordedById).Editable(false);
                })
                    .Read(read => read.Action("PatientsBiovital5_Read", "Patient").Data("filternData"))
                    .Update(update => update.Action("PatientsBioVital_BatchUpdate", "Patient"))
                    .Create(c => c.Action("PatientsBiovital5_Create", "Patient").Data("filternData"))
                    .Destroy(d => d.Action("PatientsBiovital5_Delete", "Patient"))
                )
                        )
                        <script>
                            function filternData() {
                                var grid = $("#consPtsGrid").data("kendoGrid");
                                if (grid != null) {
                                    var selectedItem = grid.dataItem(grid.select());
                                    if (selectedItem != null) {
                                        return {
                                            patientID: selectedItem.AttdPatientID
                                        };
                                    } else {
                                        return {
                                            patientID: 0
                                        };
                                    }
                                }
                            };
                        </script>
                    </div>                    
                </div>
                <div class="tab-pane" id="messages-3">

                    <div id="prescrip">
                        @(Html.Kendo().Grid<Repo.DTOs.dto_Prescription>()
                .Name("PrescGrid")
                .NoRecords("No prescription found")
                .Columns(columns =>
                {
                    columns.Bound(c => c.Prescription1);
                    columns.Bound(c => c.Dose);
                    columns.Bound(c => c.Duration);
                    columns.Bound(c => c.Qty);
                    columns.Bound(c => c.DispensedBy);
                    columns.Bound(c => c.DispensedOn).Format("{0:dd/MM/yyyy hh:mm: tt}").Title("Date");
                    //columns.ForeignKey(c => c.RecordedById, (System.Collections.IEnumerable)ViewData["recBy"], "Value", "Text")
                    //.Title("Recorded By");
                    //columns.Command(command => { command.Edit().Text("View"); command.Destroy(); }).Width(250);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Create();
                    toolbar.Save();
                    toolbar.Excel();
                })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .AutoBind(false)
                .Resizable(r => r.Columns(true))
                .Scrollable(sc => sc.Endless(true))
                .Sortable()
                .Selectable(selectable => selectable
                .Mode(GridSelectionMode.Single))
                .Mobile(MobileMode.Auto)
                .Pageable(p => p.Numeric(false)
                    .PreviousNext(false)
                    .Refresh(true)
                )
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .ServerOperation(false)
                .PageSize(50)
                .Events(e =>
                {
                    e.Error("error_handler");
                })
                .Model(model =>
                {
                    model.Id(p => p.ID);
                    model.Field(p => p.Dose).Editable(false);
                    model.Field(p => p.Duration).Editable(false);
                    model.Field(p => p.Qty).Editable(false);
                    model.Field(p => p.DispensedBy).Editable(false);
                    model.Field(p => p.DispensedOn).Editable(false);
                })
                    .Read(read => read.Action("Prescription_Read", "Consultation").Data("filterPreData"))
                    .Update(update => update.Action("Prescription_BatchUpdate", "Consultation"))
                    .Create(c => c.Action("Prescription_Create", "Consultation").Data("filterPreData"))
                    .Destroy(d => d.Action("Prescription_Delete", "Consultation"))
                )
                        )
                        <script>
                            function filterPreData() {
                                var grid = $("#consPtsGrid").data("kendoGrid");
                                if (grid != null) {
                                    var selectedItem = grid.dataItem(grid.select());
                                    if (selectedItem != null) {
                                        return {
                                            attId: selectedItem.AttdID
                                        };
                                    } else {
                                        return {
                                            patientID: 0
                                        };
                                    }
                                }
                            };
                        </script>
                    </div>
                </div>

                <div class="tab-pane" id="settings-3">

                    <p>Luckily friends do ashamed to do suppose. Tried meant mr smile so. Exquisite behaviour as to middleton perfectly. Chicken no wishing waiting am. Say concerns dwelling graceful six humoured. Whether mr up savings talking an. Active mutual nor father mother exeter change six did all. </p>

                    <p>Carriage quitting securing be appetite it declared. High eyes kept so busy feel call in. Would day nor ask walls known. But preserved advantage are but and certainty earnestly enjoyment. Passage weather as up am exposed. And natural related man subject. Eagerness get situation his was delighted. </p>

                </div>

                <div class="tab-pane" id="inbox-3">

                    <p>Carriage quitting securing be appetite it declared. High eyes kept so busy feel call in. Would day nor ask walls known. But preserved advantage are but and certainty earnestly enjoyment. Passage weather as up am exposed. And natural related man subject. Eagerness get situation his was delighted. </p>

                    <p>Luckily friends do ashamed to do suppose. Tried meant mr smile so. Exquisite behaviour as to middleton perfectly. Chicken no wishing waiting am. Say concerns dwelling graceful six humoured. Whether mr up savings talking an. Active mutual nor father mother exeter change six did all. </p>

                </div>
            </div>


        </div>
        
    </div>
</div>

<div class="container">
    @Html.Partial("~/Views/Shared/_PartialProgressBar.cshtml")
</div>
<script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script src="~/Scripts/tinymce/init-tinymce.js"></script>
<script src="~/Scripts/custom/progressBar.js"></script>